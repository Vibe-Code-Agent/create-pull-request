name: üßπ Cache Cleanup

on:
  schedule:
    # Run weekly on Sundays at 3 AM UTC to clean up old caches
    - cron: '0 3 * * 0'
  workflow_dispatch:  # Allow manual triggering

jobs:
  cleanup-cache:
    runs-on: ubuntu-latest
    steps:
      - name: üîç Checkout code
        uses: actions/checkout@v4
      
      - name: üßπ Clean up old caches
        uses: actions/github-script@v7
        with:
          script: |
            // Get all caches for the repository
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });

            console.log(`Found ${caches.data.total_count} cache entries`);

            // Delete caches older than 7 days
            const sevenDaysAgo = new Date();
            sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);

            let deletedCount = 0;
            let totalSize = 0;

            for (const cache of caches.data.actions_caches) {
              const cacheDate = new Date(cache.created_at);
              totalSize += cache.size_in_bytes;
              
              if (cacheDate < sevenDaysAgo) {
                try {
                  await github.rest.actions.deleteActionsCacheById({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    cache_id: cache.id
                  });
                  
                  console.log(`Deleted cache: ${cache.key} (${Math.round(cache.size_in_bytes / 1024 / 1024)}MB)`);
                  deletedCount++;
                } catch (error) {
                  console.log(`Failed to delete cache ${cache.key}: ${error.message}`);
                }
              }
            }

            console.log(`\nüìä Cache cleanup summary:`);
            console.log(`  Total caches: ${caches.data.total_count}`);
            console.log(`  Deleted caches: ${deletedCount}`);
            console.log(`  Total cache size: ${Math.round(totalSize / 1024 / 1024)}MB`);
            
            // Set outputs for use in other steps
            core.setOutput('deleted_count', deletedCount);
            core.setOutput('total_size_mb', Math.round(totalSize / 1024 / 1024));
      
      - name: üìä Report cleanup results
        run: |
          echo "üßπ Cache cleanup completed!"
          echo "   Deleted caches: ${{ steps.cleanup.outputs.deleted_count }}"
          echo "   Total cache size: ${{ steps.cleanup.outputs.total_size_mb }}MB"
          
          if [ "${{ steps.cleanup.outputs.deleted_count }}" -gt 0 ]; then
            echo "‚úÖ Successfully cleaned up old caches"
          else
            echo "‚ÑπÔ∏è No old caches found to clean up"
          fi